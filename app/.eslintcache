[{"/var/www/html/WebChat/app/src/index.js":"1","/var/www/html/WebChat/app/src/App.js":"2","/var/www/html/WebChat/app/src/reportWebVitals.js":"3","/var/www/html/WebChat/app/src/pages/homepage/SignUp.js":"4","/var/www/html/WebChat/app/src/pages/homepage/Login.js":"5","/var/www/html/WebChat/app/src/components/loading/Loading.js":"6"},{"size":503,"mtime":1611000836911,"results":"7","hashOfConfig":"8"},{"size":1062,"mtime":1611011703824,"results":"9","hashOfConfig":"8"},{"size":364,"mtime":1611000836911,"results":"10","hashOfConfig":"8"},{"size":1945,"mtime":1611086969047,"results":"11","hashOfConfig":"8"},{"size":537,"mtime":1611000836911,"results":"12","hashOfConfig":"8"},{"size":300,"mtime":1611000836911,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1pnzh3g",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/var/www/html/WebChat/app/src/index.js",[],["29","30"],"/var/www/html/WebChat/app/src/App.js",[],"/var/www/html/WebChat/app/src/reportWebVitals.js",[],"/var/www/html/WebChat/app/src/pages/homepage/SignUp.js",["31"],"import React from \"react\";\nimport axios from \"axios\";\n\nimport \"./Homepage.scss\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: ''\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeInputs = this.handleChangeInputs.bind(this);\n  }\n\n  handleSubmit(event) {\n\n    const content_type = 'axios application/x-some-custom-type';\n\n    axios.post('http://192.168.1.29/WebChat/api/request/createUser.php', {\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password\n      })\n      .then(function (response) {\n        // handle success\n        console.log(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  \n      event.preventDefault();\n  }\n\n  handleChangeInputs(event) {\n\n    const target = event.target.name;\n    const value = event.target.value;\n\n    this.setState( prevState => ({\n      [target]: prevState[target] = value\n    }));\n  }\n\n  render () {\n    return (\n      <section className=\"homepage-style\">\n        <h2>WebChat</h2>\n\n        <form onSubmit={ this.handleSubmit }>\n          <input type=\"text\" name=\"username\" value={ this.state.username } placeholder=\"Username\" onChange={ this.handleChangeInputs } />\n          <input type=\"text\" name=\"email\" value={ this.state.email } placeholder=\"Email\" onChange={ this.handleChangeInputs } />\n          <input type=\"password\" name=\"password\" value={ this.state.password } placeholder=\"Password\" onChange={ this.handleChangeInputs } />\n\n          <button type=\"submit\">\n            SIGN UP\n          </button>\n\n          <small>\n            Already a member ?{\" \"}\n            <span onClick={ () => this.props.handlePageChange(\"login\") }>Login</span>\n          </small>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default SignUp;\n","/var/www/html/WebChat/app/src/pages/homepage/Login.js",[],["32","33"],"/var/www/html/WebChat/app/src/components/loading/Loading.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":21,"column":11,"nodeType":"40","messageId":"41","endLine":21,"endColumn":23},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'content_type' is assigned a value but never used.","Identifier","unusedVar",["44"],["45"],"no-global-assign","no-unsafe-negation"]